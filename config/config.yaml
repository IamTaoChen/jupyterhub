allowed_images:
  scipy: jupyter/jupyter-scipy:latest
  # GPU-CuPy: eqe/jupyter-gpu:latest
  # code-server: eqe/code-server:4.14.1
  code-server:
    image: my/code-server:latest
    allow_colab: false
  minimal-notebook: jupyter/minimal-notebook

groups:
  collaborative:
    users:
      - collab-1
      - collab-2
    # admins:
    #   - aaa

roles:
  - name: server
    scopes:
      - inherit
      - self

  # - name: member-access-servers
  #   scopes:
  #     - access:servers!group=Member
  #     - access:services!group=Member
  #   groups:
  #     - Member

  - name: collab-access-1
    scopes:
      - access:servers!user=collab-1
      - admin:servers!user=collab-1
      - admin-ui
      - list:users!user=collab-1
    groups:
      - Member

  - name: collab-access-2
    scopes:
      - access:servers!user=collab-2
      - admin:servers!user=collab-2
      - admin-ui
      - list:users!user=collab-2
    groups:
      - Member

  - name: idle-culler
    description: Culls idle servers
    scopes:
      - read:users:name
      - read:users:activity
      - servers
    services:
      - idle-culler

services:
  - name: idle-culler
    admin: true
    command:
      - python3
      - -m
      - jupyterhub_idle_culler
      - --timeout=72000
ad:
  enable: true
  # allow_users:
  # If not empty, only users in the list will be allowed to login
  # - xxx
  config:
    host: 10.233.10.11
    port: 389
    base_dn: DC=ds,DC=example,DC=com
    bind_dn:
    bind_pw: PASSWORD
    user_search_rdn: OU=Users
    group_search_rdn: OU=Groups
    user_search_filter: (cn=*)
    user_username_attribute: sAMAccountName
    start_uid: 1615200000
    # cal the users' uid from AD by sid.
    # def sid_to_uid(cls, sid: str, base_uid: int = 1615200000):
    #     """
    #     RID is the last part of SID, and it is the uid of user.\n
    #     """
    #     rid = int(sid.split('-')[-1])
    #     return base_uid + rid
    force_gid:
    # If force_gid is enabled, the user's gid will be set to the following values. 
    # Otherwise, the user's gid is same with uid.
      enable: true
      gid: 1615200513
      name: lab
  local_cache:
  # If enabled is false, the local cache will be disabled.
  # When true, the user's information will be fetched from the local cache.
  # If the local cache is not found, the user's information will be fetched from AD.
    enable: true
    connect: "/data/ad_cache.sqlite3"
    table: ad_cache

user_update:
  # If enabled is false, the uid and gid and username will be fetched from the container
  enable: true
  # If from_ad is true, the uid and gid will be fetched from AD
  # If from_ad is false, the uid and gid will be fetched 1000:1000
  from_ad: false
  # If from_ad is false, the uid and gid will use the following values
  defualt_gid: 100
  defualt_uid: 1000
  default_group: users

ai:
  enable: true
  name: OPENAI_API_KEY
  key: { TOKEN }
